services:
  dashjs:
    image: clarkzjw/dashjs:tomm24
    build:
      context: .
      dockerfile: Dockerfile-dashjs
    ports:
      - "3000"
    restart: always
    depends_on:
      - pyodide
    networks:
      dashjs:
        ipv4_address: 192.167.0.101

  chrome:
    image: selenium/standalone-chrome:4.25.0-20240922
    shm_size: 2gb
    environment:
      - SE_NODE_SESSION_TIMEOUT=36000
    ports:
      - 4444:4444
      - 7900:7900
    networks:
      dashjs:
        ipv4_address: 192.167.0.102

  runner:
    image: clarkzjw/dashjs-runner:tomm24
    container_name: dashjs-runner
    build:
      context: .
      dockerfile: Dockerfile-runner
    privileged: true
    volumes:
      - ./experiments/emulation/emulation-video-tos-1.json:/batch.json
      - ./figures-emulation:/figures
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WORKDIR=${PWD}
      - VIDEO=0
      - GATEWAY=192.167.0.107
    depends_on:
      - dashjs
      - chrome
      - stat-server
      - mongo
    networks:
      dashjs:
        ipv4_address: 192.167.0.103

  stat-server:
    image: clarkzjw/dashjs-stats-server:tomm24
    build:
      context: ./stats-server
      dockerfile: Dockerfile
    ports:
      - "8000"
    environment:
      LATENCY_TEST_INTERVAL_SECONDS: 1
      GATEWAY: 192.167.0.107
      MONGO_HOST: mongo
    restart: always
    networks:
      dashjs:
        ipv4_address: 192.167.0.104

  mongo:
    image: mongo:4.4.29
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: starlink
      MONGO_INITDB_ROOT_PASSWORD: starlink
    networks:
      dashjs:
        ipv4_address: 192.167.0.105

  mongo-express:
    image: mongo-express:1-18
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: starlink
      ME_CONFIG_MONGODB_ADMINPASSWORD: starlink
      ME_CONFIG_MONGODB_URL: mongodb://starlink:starlink@mongo:27017/
    networks:
      dashjs:
        ipv4_address: 192.167.0.106

  # placeholder for easier image building with docker compose
  nginx-placeholder:
    image: clarkzjw/dashjs-nginx-emulation:tomm24
    build:
      context: .
      dockerfile: Dockerfile-nginx-emulation
    command:
      - /bin/sh
      - -c
      - "while true; do sleep 1000; done"

  livesim2:
    image: clarkzjw/dashjs-livesim2:tomm24
    build:
      context: .
      dockerfile: Dockerfile-livesim2
    ports:
      - 8888:8888
    restart: always
    networks:
      dashjs:
        ipv4_address: 192.167.0.108

  pyodide:
    image: clarkzjw/dashjs-pyodide:tomm24
    build:
      context: ./webassembly
      dockerfile: Dockerfile
    ports:
      - "80"
    restart: always
    networks:
      dashjs:
        ipv4_address: 192.167.0.109

volumes:
  mongodb:

networks:
  dashjs:
    name: dashjs
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'true'
    ipam:
      driver: default
      config:
        - subnet: "192.167.0.0/24"
          gateway: "192.167.0.1"
